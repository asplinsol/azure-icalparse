{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "AppName": {
            "defaultValue": "icalToDB",
            "type": "String"
        },
        "sql_server": {
            "type": "string",
            "defaultValue": ""
        },
        "sql_database": {
            "type": "string",
            "defaultValue": ""
        },
        "sql_authType": {
            "type": "string",
            "defaultValue": "sql"
        },
        "username": {
            "type": "securestring"
        },
        "password": {
            "type": "securestring"
        }
    },
    "variables": {
        "functionAppName": "[concat(parameters('AppName'), 'functions')]",
        "functionName": "icalparser",
        "hostingPlanName": "[concat(parameters('AppName'), 'hplan')]",
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'store')]",
        "office360ConnectionName": "office365",
        "sqlConnectionName": "[concat(parameters('AppName'), 'SQLconnection')]",
        "location": "[resourceGroup().location]",
        "workflow_name":  "[concat(parameters('AppName'), 'wflow')]",
        "packageURL": "https://gitlab.com/asplinsol/azure-icalparse/-/jobs/422282992/artifacts/download"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-05-01-preview",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "computeMode": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2015-08-01",
            "name": "[variables('functionAppName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "serverFarmId": "[variables('hostingPlanName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~1"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "6.5.0"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "apiVersion": "2015-08-01",
                    "name": "MSDeploy",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('functionAppName'))]"
                    ],
                    "properties": {
                        "packageUri": "[variables('packageURL')]"
                    }
                }
            ]
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2015-05-01",
            "name": "[variables('functionAppName')]",
            "location": "[variables('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "rest"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office360ConnectionName')]",
            "location": "[variables('location')]",
            "properties": {
                "displayName": "scheduler@sricalendar.onmicrosoft.com",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('location'),'/managedApis/office365')]"
                }
            }
        },
        {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[variables('location')]",
      "name": "[variables('sqlConnectionName')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', variables('location'), '/managedApis/sql')]"
        },
        "displayName": "sql_connection",
        "parameterValues": {
                                        "server": "[parameters('sql_server')]",
                                        "database": "[parameters('sql_database')]",
                                        "authType": "[parameters('sql_authType')]",
                                        "userName": "[parameters('username')]",
                                        "password": "[parameters('password')]"
        }
      }
    },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('workflow_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/extensions', variables('functionAppName'), 'MSDeploy')]",
                "[resourceId('Microsoft.Web/connections', variables('office360ConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_new_email_arrives_(V3)": {
                            "splitOn": "@triggerBody()?['value']",
                            "type": "ApiConnectionNotification",
                            "inputs": {
                                "fetch": {
                                    "method": "get",
                                    "pathTemplate": {
                                        "template": "/v3/Mail/OnNewEmail"
                                    },
                                    "queries": {
                                        "fetchOnlyWithAttachment": true,
                                        "folderPath": "Inbox",
                                        "importance": "Any",
                                        "includeAttachments": true
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "subscribe": {
                                    "body": {
                                        "NotificationUrl": "@{listCallbackUrl()}"
                                    },
                                    "method": "post",
                                    "pathTemplate": {
                                        "template": "/GraphMailSubscriptionPoke/$subscriptions"
                                    },
                                    "queries": {
                                        "fetchOnlyWithAttachment": true,
                                        "folderPath": "Inbox",
                                        "importance": "Any"
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "Filter_array": {
                            "runAfter": {},
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['attachments']",
                                "where": "@endswith(item()?['name'], '.ics')"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Filter_array')",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "For_each_2": {
                                            "foreach": "@body('Parse_JSON')?['events']",
                                            "actions": {
                                                "Compose": {
                                                    "runAfter": {},
                                                    "type": "Compose",
                                                    "inputs": {
                                                        "Attendee": "@items('For_each_2')?['attendee']",
                                                        "Created": "@{items('For_each_2')?['created']}",
                                                        "DateEnd": " @{items('For_each_2')?['end']}",
                                                        "DateStamp": " @{items('For_each_2')?['dtstamp']}",
                                                        "DateStart": " @{items('For_each_2')?['start']}",
                                                        "LastModified": "@{items('For_each_2')?['lastmodified']}",
                                                        "Method": "@{body('Parse_JSON')?['method']}",
                                                        "Organizer": "@items('For_each_2')?['organizer']",
                                                        "Sequence ": "@int(items('For_each_2')?['sequence'])",
                                                        "Status ": "@{items('For_each_2')?['status']}",
                                                        "Summary": " @{items('For_each_2')?['summary']}",
                                                        "UID": "@{items('For_each_2')?['uid']}"
                                                    }
                                                },
                                                "Execute_stored_procedure_(V2)": {
                                                    "runAfter": {
                                                        "Parse_JSON_2": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "AttendeeCN": "@body('Parse_JSON_2')?['Attendee']?['params']?['CN']",
                                                            "AttendeeRole": "@body('Parse_JSON_2')?['Attendee']?['params']?['ROLE']",
                                                            "Created": "@body('Parse_JSON_2')?['Created']",
                                                            "DateEnd": "@body('Parse_JSON_2')?['DateEnd']",
                                                            "DateStamp": "@body('Parse_JSON_2')?['DateStamp']",
                                                            "DateStart": "@body('Parse_JSON_2')?['DateStart']",
                                                            "LastModified": "@body('Parse_JSON_2')?['LastModified']",
                                                            "Method": "@body('Parse_JSON_2')?['METHOD']",
                                                            "OrganizerCn": "@body('Parse_JSON_2')?['Organizer']?['params']?['CN']",
                                                            "OrganizerMailTo": "@body('Parse_JSON_2')?['Organizer']?['val']",
                                                            "Sequence": "@body('Parse_JSON_2')?['Sequence ']",
                                                            "Status": "@body('Parse_JSON_2')?['Status ']",
                                                            "Summary": "@body('Parse_JSON_2')?['Summary']",
                                                            "UID": "@body('Parse_JSON_2')?['UID']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['sql_1']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[RegisterInviteResponse]'))}"
                                                    }
                                                },
                                                "Parse_JSON_2": {
                                                    "runAfter": {
                                                        "Compose": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@outputs('Compose')",
                                                        "schema": {
                                                            "properties": {
                                                                "Attendee": {
                                                                    "properties": {
                                                                        "params": {
                                                                            "properties": {
                                                                                "CN": {
                                                                                    "type": "string"
                                                                                },
                                                                                "CUTYPE": {
                                                                                    "type": "string"
                                                                                },
                                                                                "PARTSTAT": {
                                                                                    "type": "string"
                                                                                },
                                                                                "ROLE": {
                                                                                    "type": "string"
                                                                                },
                                                                                "RSVP": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "X-NUM-GUESTS": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "val": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "Created": {
                                                                    "type": "string"
                                                                },
                                                                "DateEnd": {
                                                                    "type": "string"
                                                                },
                                                                "DateStamp": {
                                                                    "type": "string"
                                                                },
                                                                "DateStart": {
                                                                    "type": "string"
                                                                },
                                                                "LastModified": {
                                                                    "type": "string"
                                                                },
                                                                "METHOD": {
                                                                    "type": "string"
                                                                },
                                                                "Organizer": {
                                                                    "properties": {
                                                                        "params": {
                                                                            "properties": {
                                                                                "CN": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "val": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "Sequence ": {
                                                                    "type": "integer"
                                                                },
                                                                "Status ": {
                                                                    "type": "string"
                                                                },
                                                                "Summary": {
                                                                    "type": "string"
                                                                },
                                                                "UID": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "type": "Foreach"
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('Parse_JSON')?['method']",
                                                    "REPLY"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Parse_JSON": {
                                    "runAfter": {
                                        "icalparse": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('icalparse')",
                                        "schema": {
                                            "properties": {
                                                "events": {
                                                    "items": {
                                                        "properties": {
                                                            "attendee": {
                                                                "properties": {
                                                                    "params": {
                                                                        "properties": {
                                                                            "CN": {
                                                                                "type": "string"
                                                                            },
                                                                            "CUTYPE": {
                                                                                "type": "string"
                                                                            },
                                                                            "PARTSTAT": {
                                                                                "type": "string"
                                                                            },
                                                                            "ROLE": {
                                                                                "type": "string"
                                                                            },
                                                                            "RSVP": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "X-NUM-GUESTS": {
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "val": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "created": {
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            },
                                                            "dtstamp": {
                                                                "type": "string"
                                                            },
                                                            "end": {
                                                                "type": "string"
                                                            },
                                                            "lastmodified": {
                                                                "type": "string"
                                                            },
                                                            "location": {
                                                                "type": "string"
                                                            },
                                                            "organizer": {
                                                                "properties": {
                                                                    "params": {
                                                                        "properties": {
                                                                            "CN": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "val": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "params": {
                                                                "type": "array"
                                                            },
                                                            "sequence": {
                                                                "type": "string"
                                                            },
                                                            "start": {
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "type": "string"
                                                            },
                                                            "summary": {
                                                                "type": "string"
                                                            },
                                                            "transparency": {
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "uid": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type",
                                                            "params",
                                                            "start",
                                                            "end",
                                                            "dtstamp",
                                                            "organizer",
                                                            "uid",
                                                            "attendee",
                                                            "created",
                                                            "description",
                                                            "lastmodified",
                                                            "location",
                                                            "sequence",
                                                            "status",
                                                            "summary",
                                                            "transparency"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "method": {
                                                    "type": "string"
                                                },
                                                "prodid": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "icalparse": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": "@items('For_each')",
                                        "function": {
                                            "id": "[resourceId('Microsoft.Web/sites/functions', variables('functionAppName'), variables('functionName'))]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Filter_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Terminate": {
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Terminate",
                            "inputs": {
                                "runStatus": "Succeeded"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office360ConnectionName'))]",
                                "connectionName": "[variables('office360ConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionID, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            },
                            "sql_1": {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('sqlConnectionName'))]",
                                "connectionName": "[variables('sqlConnectionName')]",
                                 "id": "[concat('/subscriptions/', subscription().subscriptionID, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/sql')]"                                
                            }
                        }
                    }
                }
            }
        }
    ]
}